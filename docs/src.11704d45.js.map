{"version":3,"sources":["index.js"],"names":["projection","d3","geoEquirectangular","center","scale","path","geoPath","sliders_begin","sliders_end","attributes","list_dict","Object","dataLoc1","require","dataLoc2","dataLoc3","dataLoc4","dataLoc5","generateAttribute","slider1","createD3RangeSlider","onChange","newRange","select","text","begin","toLocaleString","end","updateFilter","range","slider2","slider3","slider4","filterList","selectAll","_groups","dataLoc","csv","data","i","length","k","is_out","j","id","substring","A2","l","attribute","at_val","Name","Value","classed","getTextBox","selection","each","d","bbox","getBBox","list","push","readAttribute","country","tablename","document","getElementById","innerText","parseInt","$","window","resize","svg","attr","width","height","append","json","countriesGroup","countries","features","enter","properties","iso_a3","on","name","pop2","countryLabels"],"mappings":"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","file":"src.11704d45.js","sourceRoot":"../src","sourcesContent":["      // DEFINE FUNCTIONS/OBJECTS\n      // Define map projection\n      var projection = d3\n         .geoEquirectangular()\n         .center([0, 15]) // set centre to further North as we are cropping more off bottom of map\n         .scale(200) // scale to fit group width\n      ;\n\n      // Define map path\n      var path = d3\n         .geoPath()\n         .projection(projection);\n\n      var sliders_begin = [0, 0, 0, 0];\n      var sliders_end = [100, 100, 100, 100];\n      var attributes = [\"unemployment\", \"obesity_rate\", \"birth_rate\", \"death_rate\", \"population\"];\n      var list_dict = new Object();\n      const dataLoc1 = require(\"./unemployment.csv\");\n      const dataLoc2 = require(\"./obesity_rate.csv\");\n      const dataLoc3 = require(\"./birth_rate.csv\");\n      const dataLoc4 = require(\"./death_rate.csv\");\n      const dataLoc5 = require(\"./population.csv\");\n      list_dict[attributes[0]] = generateAttribute(dataLoc1);\n      list_dict[attributes[1]] = generateAttribute(dataLoc2);\n      list_dict[attributes[2]] = generateAttribute(dataLoc3);\n      list_dict[attributes[3]] = generateAttribute(dataLoc4);\n      list_dict[attributes[4]] = generateAttribute(dataLoc5);\n\n\n      var slider1 = createD3RangeSlider(0, 75, \"#slider-container1\");\n      slider1.onChange(function(newRange) {\n         d3.select(\"#range-label1\").text(newRange.begin.toLocaleString() + \"% - \" + newRange.end.toLocaleString() + \"%\");\n         sliders_begin[0] = newRange.begin;\n         sliders_end[0] = newRange.end;\n         updateFilter();\n      });\n      slider1.range(0, 75);\n\n      var slider2 = createD3RangeSlider(0, 40, \"#slider-container2\");\n      slider2.onChange(function(newRange) {\n         d3.select(\"#range-label2\").text(newRange.begin.toLocaleString() + \"% - \" + newRange.end.toLocaleString() + \"%\");\n         sliders_begin[1] = newRange.begin;\n         sliders_end[1] = newRange.end;\n         updateFilter();\n      });\n      slider2.range(0, 40);\n\n      var slider3 = createD3RangeSlider(0, 50, \"#slider-container3\");\n      slider3.onChange(function(newRange) {\n         d3.select(\"#range-label3\").text(newRange.begin.toLocaleString() + \" - \" + newRange.end.toLocaleString());\n         sliders_begin[2] = newRange.begin;\n         sliders_end[2] = newRange.end;\n         updateFilter();\n      });\n      slider3.range(0, 50);\n\n      var slider4 = createD3RangeSlider(0, 20, \"#slider-container4\");\n      slider4.onChange(function(newRange) {\n         d3.select(\"#range-label4\").text(newRange.begin.toLocaleString() + \" - \" + newRange.end.toLocaleString());\n         sliders_begin[3] = newRange.begin;\n         sliders_end[3] = newRange.end;\n         updateFilter();\n      });\n      slider4.range(0, 20);\n\n      function updateFilter() {\n         filterList = d3.selectAll(\".country\")._groups[0];\n         const dataLoc = require('./code_to_fullname.csv');\n         d3.csv(dataLoc, function(data) {\n            for (i = 0; i < filterList.length; i++) {\n               is_out = false\n               for (k = 0; k < sliders_begin.length; k++) {\n                  for (j = 0; j < data.length; j++) {\n                     if (filterList[i].id.substring(7) == data[j].A2) {\n                        attribute = attributes[k]\n                        at_val = \"\"\n                        for (l = 0; l < list_dict[attribute].length; l++) {\n                           if (data[j].Name == list_dict[attribute][l][\"Name\"]) {\n                              at_val = list_dict[attribute][l].Value\n                           }\n                        }\n                        if (at_val < sliders_begin[k] || at_val > sliders_end[k]) {\n                           is_out = true\n                        }\n                     }\n                  }\n               }\n               if (is_out) {\n                  d3.select(filterList[i]).classed(\"country-filtered\", true);\n               } else {\n                  d3.select(filterList[i]).classed(\"country-filtered\", false);\n               }\n            }\n         })\n      }\n\n      function getTextBox(selection) {\n         selection\n            .each(function(d) {\n               d.bbox = this\n                  .getBBox();\n            });\n      }\n\n      function generateAttribute(dataLoc) {\n         var list = [];\n         d3.csv(dataLoc, function(data) {\n            for (var i = 0; i < data.length; i++) {\n               list.push(data[i]);\n            }\n         })\n         return list;\n      }\n\n      function readAttribute(country, tablename, attribute) {\n         // console.log(data[0].Value);\n         for (var i = 0; i < list_dict[attribute].length; i++) {\n            if (attribute == 'population') {\n               if (list_dict[attribute][i][\"Name\"] == country) {\n                  document.getElementById(tablename).innerText = parseInt(list_dict[attribute][i].Value).toLocaleString();\n               }\n               // these will all need to be hardcoded  \n            } else {\n               if (list_dict[attribute][i][\"Name\"] == country) {\n                  document.getElementById(tablename).innerText = list_dict[attribute][i].Value + \"%\"; // if not all of them are percent add another branch\n               }\n            }\n         }\n      }\n\n      // on window resize\n      $(window).resize(function() {\n         // Resize SVG\n         svg\n            .attr(\"max-width\", $(\"#map-holder\").width())\n            .attr(\"max-height\", $(\"#map-holder\").height());\n      });\n\n      // create an SVG\n      var svg = d3\n         .select(\"#map-holder\")\n         .append(\"svg\")\n         // set to the same size as the \"map-holder\" div\n         // .attr(\"width\", $(\"#map-holder\").width())\n         // .attr(\"height\", $(\"#map-holder\").height())\n         .attr(\"viewBox\", \"0, 0, 1200, 600\");\n\n\n      // get map data\n      d3.json(\n         \"https://raw.githubusercontent.com/andybarefoot/andybarefoot-www/master/maps/mapdata/custom50.json\",\n         function(json) {\n            //Bind data and create one path per GeoJSON feature\n            countriesGroup = svg.append(\"g\").attr(\"id\", \"map\");\n            // add a background rectangle\n            countriesGroup\n               .append(\"rect\")\n               .attr(\"x\", 0)\n               .attr(\"y\", 0)\n               .attr(\"width\", 3000)\n               .attr(\"height\", 1500)\n\n            // draw a path for each feature/country\n            countries = countriesGroup\n               .selectAll(\"path\")\n               .data(json.features)\n               .enter()\n               .append(\"path\")\n               .attr(\"d\", path)\n               .attr(\"id\", function(d, i) {\n                  return \"country\" + d.properties.iso_a3;\n               })\n               .attr(\"class\", \"country\")\n               // add a mouseover action to show name label for feature/country\n               .on(\"mouseover\", function(d, i) {\n                  d3.selectAll(\".country\").classed(\"country-hover\", false);\n\n                  if (d3.select(this).classed(\"country-filtered\") || d3.select(this).classed(\"country-click_hover\")) {} else if (d3.select(this).classed(\"country-click\")) {\n                     d3.select(this).classed(\"country-click_hover\", true)\n                     document.getElementById(\"table-country-name2\").innerText = d.properties.name;\n                     pop2 = readAttribute(d.properties.name, \"table-country-pop2\", 'population');\n\n                  } else {\n                     d3.select(this).classed(\"country-hover\", true);\n                     document.getElementById(\"table-country-name2\").innerText = d.properties.name;\n                     readAttribute(d.properties.name, \"table-country-pop2\", 'population');\n                     readAttribute(d.properties.name, \"r2c4\", 'unemployment');\n                     readAttribute(d.properties.name, \"r2c5\", 'obesity_rate');\n                     readAttribute(d.properties.name, \"r2c6\", 'birth_rate');\n                     readAttribute(d.properties.name, \"r2c7\", 'death_rate');\n\n                  }\n               })\n               .on(\"mouseout\", function(d, i) {\n                  document.getElementById(\"table-country-pop2\").innerText = \"\";\n                  document.getElementById(\"table-country-name2\").innerText = \"\";\n                  document.getElementById(\"r2c4\").innerText = \"\";\n                  document.getElementById(\"r2c5\").innerText = \"\";\n                  document.getElementById(\"r2c6\").innerText = \"\";\n                  document.getElementById(\"r2c7\").innerText = \"\";\n\n                  d3.select(this).classed(\"country-hover\", false);\n                  if (d3.select(this).classed(\"country-click_hover\")) {\n                     d3.select(this).classed(\"country-click_hover\", false)\n                     d3.select(this).classed(\"country-click\", true)\n                  }\n               })\n               .on(\"click\", function(d, i) {\n                  document.getElementById(\"table-country-pop1\").innerText = \"\";\n                  document.getElementById(\"table-country-name1\").innerText = \"\";\n                  document.getElementById(\"r1c4\").innerText = \"\";\n                  document.getElementById(\"r1c5\").innerText = \"\";\n                  document.getElementById(\"r1c6\").innerText = \"\";\n                  document.getElementById(\"r1c7\").innerText = \"\";\n                  if (d3.select(this).classed(\"country-filtered\")) {\n                     // do nothing?\n                  } else {\n                     d3.selectAll(\".country\").classed(\"country-click\", false);\n                     d3.select(this).classed(\"country-click_hover\", true);\n                     document.getElementById(\"table-country-name1\").innerText = d.properties.name;\n                     readAttribute(d.properties.name, \"table-country-pop1\", 'population');\n                     readAttribute(d.properties.name, \"r1c4\", 'unemployment');\n                     readAttribute(d.properties.name, \"r1c5\", 'obesity_rate');\n                     readAttribute(d.properties.name, \"r1c6\", 'birth_rate');\n                     readAttribute(d.properties.name, \"r1c7\", 'death_rate');\n\n                  }\n               })\n            countryLabels = countriesGroup\n               .selectAll(\"g\")\n               .data(json.features)\n               .enter()\n               .append(\"g\")\n               .attr(\"class\", \"countryLabel\")\n               .attr(\"id\", function(d) {\n                  return \"countryLabel\" + d.properties.iso_a3;\n               })\n         }\n      );"]}